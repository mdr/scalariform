0.1.5 (..)
* FIX: Type formatter crash on multiline types
* Track scalac parser -- allow trait-position parents to have parameter blocks
* Sync changes to InferredSemicolonParser

0.1.4 (24/April/13)
* FIX: Allow declarations as last statement in case block (issue #60)
* Update to build 2.10 final

0.1.3 (3/October/12)
* Add EOF to ComplilationUnit, ensuring entire source is represented in the tree
* Support $this references in String interpolation
* Update build to sbt 0.12.1

0.1.2 (7/May/12)

* Revamp command-line tool with more intuitive behaviour
* Add --quiet, --recurse, --stdin, --stdout options to command-line tool
* FIX: Scaladoc comment formatting could break nested comments (issue #36)
* Tidy up, optimise lexer code
* FIX: Parse 5.f, 5.d as floating points, unless in Scala 2.11+ mode
* FIX: Bug with line-per-annotation style
* Add support for String interpolation
* Add support for macros
* Add --scalaVersion=<version> flag to command-line tool
* Support expr[T1, T2][T3, T4] and g()[String] syntaxes
* Fix AST selection for prefix expressions

0.1.1 (18/October/11)

* FIX: Leave PCDATA whitespace untouched inside a single-line XML tag (issue #27)
* FIX: indent for indentLocalDefs on first line of function block (issue #24)
* ParenExpr now allows newline after opening paren (issue #18)
* FIX: spurious indentation in staggered dot expressions (issue #25)
* Preserve newline before annotations (issue #28)
* Add option to support CompactControlReadability style (issue #22) (thanks to by Owein Reese (https://github.com/wheaties) and Rose Toomey (https://github.com/rktoomey) for the patch
* Preserve newline before anonymous function argument (issue #21)
* Allow one-line anonymous function blocks
* Fix parser crash on argument-less constructor annotations
* Add PlaceScaladocAsterisksBeneathSecondAsterisk preference to conform to recommended Scaladoc style (issue #30)
* FIX: Removal of space causing token merge in varargs and unary ops (http://scala-ide-portfolio.assembla.com/spaces/scala-ide/tickets/1000601)
* Switch to sbt 0.11 build

0.1.0 (16/July/11)

* Add forgiving mode to lexer
* Add SpaceInsideParentheses and SpaceInsideBrackets preferences (issue #14)
* Ability to import/export preferences as properties; --preferencesFile=<path> command-line option
* FIX: incorrect indent behaviour for finally block after a catch block
* Add SpacesWithinPatternBinders preference (issue #15)
* Add MultilineScaladocCommentsStartOnFirstLine preference (issue #16)
* FIX: infinite loop in lexer on malformed XML processing instructions / unparsed
* Add IndentWithTabs preference (issue #17)
* FIX: Fix incorrectly parsed command line argument (issue #20)
* Update for 2.9.0

0.0.9 (26/February/11)

* Add support for AST selection
* Improve basic formatting of Scaladoc comments
* Improve stairway indenting of argument lists, infix exprs
* Add preference "PreserveDanglingCloseParenthesis" to keep newlines before a dangling right paren (issue #6)
* Allow single-expression case clauses to be formatted adjacent to the case arrow (issue #7)
* Improve formatting after a single-line comment (issue #8)
* Allow missing param types for -Yinfer-argument-types (issue #9)
* FIX: erroneous spaces after "type" (issue #10)
* Add --forceOutput command-line argument to pass input through untouched if there is a parse error (#issue 11/12)
* Pull out separate, non-System.exit()ing 'process' method separate to main() (issue #13)

0.0.8 (23/January/11)

* FIX: Correctly handle use of +/- as type parameters in defs
* Add Maven formatter plugin (contributed by Adam Crain -- https://github.com/jadamcrain)
* FIX: Bug with lexing """ at end of text
* Add AlignSingleLineCaseStatements preferences to align the arrows of consecutive single-line case statements
* Add IndentLocalDefs preference to indent local methods an extra level
* Track parser changes in Scala 2.9:
    * Type variables in a constructor pattern match
    * Generalised catch clause
    * Mirror code reorganisation of scala.tools.nsc.ast.parser.Parsers

0.0.7 (18/October/10)

* Rewrite parser; formatter is now ~60% faster
* Add IndentPackageBlocks formatting preference
* Allow newline before self type declaration
* FIX: avoid abutting @ and an operator, otherwise it merges into a single identifer
* FIX: formatting for newline between private[foo] and trait/class/def etc
* Update parser to match changes from Scala trac #3672 (types on implicit parameters in function expressions)
* FIX: avoid hash and operator merging (e.g. b[c# ::[d]])
* Tweaks to else clause formatting

0.0.6 (4/October/10)

* Lexer performance tweaks
* FIX: whitespace in XML end tags (e.g. </a   >)
* Tweak multiline case clause indentation
* FIX: indentation problem with xml in StatSeq
* Disallow staircase expression breaks before commas and colons
* FIX: incorrect indentation within multiple param clauses
* Improved formatting for case blocks
* Command line tool learned "--encoding=" option 
* FIX: honour previously-ignored formatXml preference

0.0.5 (15/September/10)

* Support Scala scripts
* Better staircase expr formatting
* Handle Scala parsing exceptions in command-line tool
* Set up publish to Scala Tools repo
* Bug fixes for if/for/while inside paren expressions
* Parse and format a sequence of XML nodes correctly
* No longer force empty blocks to be single line (class A {})
* FIX: implicit closure formatting
* FIX: a package / NEWLINE parsing bug

0.0.4 (17/July/10)

* Add Maven/Tycho build
* Adjust spacing between comments and adjacent tokens
* Improved formatting for import blocks
* FIX: "private[pack]trait" formatting
* FIX: "val a = _.b" parsing
* Improved "staircase expression" formatting
* Simple XML processing by default
* Add "listFiles" command line option -- thanks to Olivier Michallat (olim7t) for patch

0.0.3 (9/June/10)

* command line tool (scalariform.commandline.Main)
* _~_ formatting fix

0.0.2 (31/May/10) 

* parser update for multiple guards in a generator to match new scalac behaviour
* small compiler fixes to match trunk

0.0.1 (11/April/10) 

* initial release
